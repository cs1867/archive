#!/bin/sh
# postinst script for perfsonar-archive

export JAVA_HOME=/usr/share/elasticsearch/jdk

# assigns file permissions
chown -R perfsonar:perfsonar /usr/lib/perfsonar/archive /etc/pscheduler/default-archives
chmod 644 $(find /usr/lib/perfsonar/archive -type f) /etc/pscheduler/default-archives/http_logstash.json
chmod 755 $(find /usr/lib/perfsonar/archive -type d) /etc/pscheduler/default-archives /usr/lib/perfsonar/archive/perfsonar-scripts/*

# if new install, then enable
systemctl daemon-reload
systemctl enable elasticsearch.service
systemctl enable logstash.service

# fix directory permissions
chmod g+ws /etc/elasticsearch/
chown -R root:elasticsearch /etc/elasticsearch/

# run elasticsearch pre startup script
bash /usr/lib/perfsonar/archive/perfsonar-scripts/pselastic_secure_pre.sh
chmod g+r /etc/elasticsearch/*.pem

# start elasticsearch
systemctl start elasticsearch.service

# restart logstash
systemctl restart logstash.service
# restart logstash forcibly due to stalled ingress pipeline
#ps -aux | grep ^logstash | awk '{print $2}' | xargs kill -9

# restart the service to fix port conflict
systemctl restart opendistro-performance-analyzer.service

# run elasticsearch post startup script
bash /usr/lib/perfsonar/archive/perfsonar-scripts/pselastic_secure_pos.sh

# run elmond configuration script
bash /usr/lib/perfsonar/archive/perfsonar-scripts/elmond_configuration.sh
usermod -a -G elasticsearch perfsonar

# restart elmond
systemctl restart elmond.service

#DEBHELPER#
exit 0
